
suppressMessages(library(SingleR))
suppressMessages(library(scmap))
suppressMessages(library(dplyr))
suppressMessages(library(SingleCellExperiment))
suppressMessages(library(scater))
suppressMessages(library("celldex"))
suppressMessages(library(qusage))
suppressMessages(library(scuttle))
suppressMessages(library(scran))
suppressMessages(library(Seurat))

obj.merge=sce.list


mouseRNA <- MouseRNAseqData()
ref=mouseRNA

# ref的rowData中没有feature_symbol，加入下面代码
rowData(ref)$feature_symbol <- rownames(ref)

# 设定成scamp需要的格式,需要用到cell_type1
colData(ref)$cell_type1 <- colData(ref)$label.fine
# 导入SingleCellExperiment数据
ref_sce <- SingleCellExperiment(assays=list(logcounts=assays(ref)$logcounts), 
                                colData=colData(ref), rowData=rowData(ref))


# 找变异基因，top500
dec <- modelGeneVar(ref_sce)
top.hvgs2 <- getTopHVGs(dec, n=500)
top.hvgs2=top.hvgs2[top.hvgs2 %in% rownames(obj.merge)]
# 导入数据种
ref_sce <- setFeatures(ref_sce, features =top.hvgs2)
# 按照cluster计算,相当于是中心化ref数据中不同的细胞类型
ref_sce <- indexCluster(ref_sce,cluster_col = "cell_type1")
scmap_cluster_reference <- metadata(ref_sce)$scmap_cluster_index
# 按照cell计算
ref_sce <- scmap::indexCell(ref_sce)
scmap_cell_reference <- metadata(ref_sce)$scmap_cell_index
scmap_cell_metadata <- colData(ref_sce)


query_sce <- SingleCellExperiment::SingleCellExperiment(assays=list(counts=obj.merge@assays[["alra"]]@data))
rowData(query_sce)$feature_symbol <- rownames(query_sce)
logcounts(query_sce)=query_sce@assays@data@listData[["counts"]]



scmap_cluster_res <- scmap::scmapCluster(projection=query_sce, 
                                         index_list=list(scmap_cluster_reference), 
                                         threshold=0.1)

par(mar=c(13, 4, 1, 0))
barplot(table(scmap_cluster_res$combined_labs), las=2)
# 基于cluster注释,将注释信息带回数据中UMAP
colData(query_sce)$scmap_cluster <- scmap_cluster_res$combined_labs
query_sce <- scater::runUMAP(query_sce)
scater::plotReducedDim(query_sce, dimred="UMAP", colour_by="scmap_cluster")
# 基于cell注释
nearest_neighbours <- scmap::scmapCell(projection=query_sce, 
                                       index_list = list(immune1 = scmap_cell_reference), 
                                       w=10)

mode_label <- function(neighbours, metadata=scmap_cell_metadata$cell_type1) {
  freq <- table(metadata[neighbours])  #非常巧妙的统计每个query细胞的可能细胞类型，neighbours代表query每个细胞类型标号，metadata代表ref每个细胞类型
  label <- names(freq)[which(freq == max(freq))]
  if (length(label) > 1) {return("ambiguous")}
  return(label)
}

scmap_cell_labs <- apply(nearest_neighbours$immune1$cells, 2, mode_label)
colData(query_sce)$scmap_cell <- scmap_cell_labs
par(mar=c(10, 4, 0, 0))
barplot(table(scmap_cell_labs), las=2)

scater::plotReducedDim(query_sce, dimred="UMAP", colour_by="scmap_cell")

##########################singleR
## 基于cell
predictions <- SingleR::SingleR(test=query_sce, ref=ref, labels=ref$label.fine)
sum(is.na(predictions$pruned.labels))
predictions$pruned.labels[which(is.na(predictions$pruned.labels))] <- "ambiguous"
colData(query_sce)$singleR_cell <- predictions$pruned.labels
par(mar=c(13, 4, 2, 0))
barplot(table(predictions$pruned.labels), las=2)
scater::plotReducedDim(query_sce, dimred="UMAP", colour_by="singleR_cell")

