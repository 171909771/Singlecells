
library(tidyverse)
library(Seurat)
library(patchwork)
sce=readRDS("merge.rds")
# 计算ercc比例
mt=rownames(sce)[grep("^mt-",rownames(sce),ignore.case = T)]
mt=substr(mt[1],0,3)
pbmc <- PercentageFeatureSet(sce, pattern = mt, col.name = "percent.mt")
# 查看表达情况
VlnPlot(pbmc, features = c("nFeature_RNA", "nCount_RNA","percent.mt"), ncol = 3)
# 设定表达阈值
sce <- subset(pbmc, subset = nFeature_RNA <6000  & percent.mt < 50)
# 修改分组情况
levels(sce@active.ident)=c(paste(rep('Sham',3),sep = '',seq(1,3)),paste(rep('MCAO',3),sep = '',seq(1,3)))
# 根据分组信息进行拆分数据
sce$orig.ident=sce@active.ident
sce.list <- SplitObject(sce, split.by = "orig.ident")

library(SeuratWrappers)
##############方法1 ： log-normalization
sce.list <- lapply(X = sce.list, FUN = function(x) {
  x <- NormalizeData(x, normalization.method = "LogNormalize", scale.factor = 10000)
  x=RunALRA(x)
  x <- FindVariableFeatures(x, selection.method = "vst", nfeatures = 3000)
})

sce.list=readRDS('mergealra.rds')



atoms.merge <- lapply(X = sce.list, FUN = function(x) {
  x <- LeverageScoreSampling(object = x, num.cells = 5000)
})


features <- SelectIntegrationFeatures(object.list = atoms.merge)

atoms.merge <- FastRPCAIntegration(object.list = atoms.merge, dims = 1:30, normalization.method = "LogNormalize",
                                   anchor.features = features)


atom.reduction <- "integrated_dr"
atoms.merge <- RunUMAP(atoms.merge, reduction = atom.reduction, dims = 1:30, return.model = TRUE)
DimPlot(atoms.merge, group.by = "orig.ident")


sce.list <- lapply(X = sce.list, FUN = function(x) {
  x <- IntegrateSketchEmbeddings(object = x, atom.sketch.object = atoms.merge, atom.sketch.reduction = atom.reduction,
                                 features = features)
})
sce.list=readRDS('finaltest.rds')
obj.merge <- merge(sce.list[[1]], sce.list[2:length(sce.list)], merge.dr = "integrated_dr")


saveRDS(obj.merge,'mergealrafinal')
obj.merge=readRDS('mergealrafinal')
obj.merge <- RunTSNE(obj.merge, reduction = "integrated_dr", dims = 1:30)
obj.merge <- FindNeighbors(obj.merge,  graph.name = "test",reduction = "integrated_dr", dims = 1:30)
obj.merge <- FindClusters(obj.merge, graph.name = "test", resolution = 1.5)

DimPlot(obj.merge, reduction = "tsne", group.by = "seurat_clusters", shuffle = TRUE, raster = FALSE)
