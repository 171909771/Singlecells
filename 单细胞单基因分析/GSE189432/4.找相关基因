library(tidyverse)
library(Seurat)
library(patchwork)
options (warn = -1)

#导入数据

annotation1<- obj.merge
# annotation1=readRDS('annotation1.rds')

#比较sham组及mcao组
vs1=function(data=annotation1,x='Sham',y='MCAO',cluster='Microglia'){
  #选取microglia及sham组
  cluster.nor=subset(data,celltype.group==x & tmp==cluster)
  cluster.mcao=subset(data,celltype.group==y & tmp==cluster)
  
  dat.cluster.nor=data.frame(GetAssayData(cluster.nor))
  dat.cluster.mcao=data.frame(GetAssayData(cluster.mcao))
  #分别对sham和mcao算每个基因的平均值及scale值
  rowaverage1=rowMeans(dat.cluster.nor)
  rowaverage1=data.frame(rowaverage1)
  rowaverage1$genenames=rownames(rowaverage1)
  sham.scalevalue=data.frame('genenames'=rowaverage1$genenames,
                             'value'=scale(rowaverage1$rowaverage1))
  
  
  rowaverage1=rowMeans(dat.cluster.mcao)
  rowaverage1=data.frame(rowaverage1)
  rowaverage1$genenames=rownames(rowaverage1)
  mcao.scalevalue=data.frame('genenames'=rowaverage1$genenames,
                             'value'=scale(rowaverage1$rowaverage1))
  
  data.merge=merge(mcao.scalevalue,sham.scalevalue,
                   by='genenames',suffixes = c(".mcao",".sham"))
  rownames(data.merge)=data.merge$genenames
  data.merge$choose=data.merge$value.mcao<data.merge$value.sham
  
  output=list(NOR=dat.cluster.nor,MCAO=dat.cluster.mcao,merge=data.merge)
  
  rm(list=ls()[ls()!='output'])
  gc()
  return(output)
}


#找p2的相关基因
correla=function(clustername){
  
  
  tmp=vs1(x='Sham',y='MCAO-72h',cluster=clustername)
  dat.cluster.mcao=tmp$MCAO
  dat.cluster.nor=tmp$NOR
  #每个分组中scale后的数值均值在MCAO和sham中的大小比较。
  data.merge=tmp$merge
  
 

# 找P2相关性基因 ----------------------------------------------------------------

  y1=as.numeric(dat.cluster.mcao['P2ry12',])
  plot(density(y1))
  y2=as.numeric(dat.cluster.nor['P2ry12',])
  plot(density(y2))
  
  testmcao=cor(y1,t(dat.cluster.mcao))
  testmcao=data.frame(value=t(testmcao))
  testmcao$genenames=rownames(testmcao)
  testmcao$absvalue=abs(testmcao$value)
  
  
  testnor=cor(y2,t(dat.cluster.nor))
  testnor=data.frame(value=t(testnor))
  testnor$genenames=rownames(testnor)
  testnor$absvalue=abs(testnor$value)
  

# 筛选cor 系数绝对值大于0.6 --------------------------------------------------------------------
  testnor=subset(testnor,absvalue>0.6)
  testmcao=subset(testmcao,absvalue>0.6)
  

# 合并数据 --------------------------------------------------------------------
  test=merge(data.merge,testmcao,by='genenames')
  test=merge(test,testnor,by='genenames',suffixes = c("",".norcor"))
  test$order=test$absvalue+test$absvalue.norcor
  test=test[order(test$order,decreasing = T),]
  


# 计算 ----------------------------------------------------------------------

  
  cat(clustername,"mcao:",mean(test$value.mcao),'\n')
  cat(clustername,"sham:",mean(test$value.sham),'\n')
  pva=wilcox.test(test$value.mcao,test$value.sham)
  cat(clustername,'pvalue:',pva[["p.value"]],'\n')
  rm(list=ls()[ls()!='test'])
  gc()
  return(test)
  
}



genetmp=as.character(unique(annotation1@meta.data[["tmp"]]))
corlist=list()
for(i in genetmp){
  corlist[[i]]=try(correla(i))
  
}

saveRDS(corlist,file='resultlist-72h.rds')
