
# 数据前处理 -------------------------------------------------------------------


library(limma)
library(edgeR)
## 读取数据并转换一直的变量，改变dat1名称
dat=read.delim("GSE77986_series_matrix.txt.gz",header = T,comment.char = "!")
# library(devtools)
# install_github("jmzeng1314/AnnoProbe")
library(AnnoProbe)
gpl='GPL16570'
## 可以更换type信息，具体查看?idmap
probe2gene=idmap(gpl,type = 'soft', mirror = "tercent")
head(probe2gene)

# 整理数据
dat1=merge(dat,probe2gene,by.x="ID_REF",by.y="ID")
dat <- aggregate(x = dat1[,2:(length(dat1)-1)],
                 by = list(dat1$symbol),
                 FUN = mean)
rownames(dat)=dat$Group.1
dat$Group.1=NULL


library(AnnoProbe) 
ids=annoGene( rownames(dat),'SYMBOL','mouse')
procongene=ids$SYMBOL[ids$biotypes=='protein_coding']
dat=dat[rownames(dat)%in%procongene,]



boxplot(dat)
### 如果需要
# dat=log2(dat)
# dat=data.frame(normalizeBetweenArrays(dat))


colnames(dat)=c("WT_sham_rep1","WT_sham_rep2","WT_sham_rep3","Clec4e-/-_sham_rep1","Clec4e-/-_sham_rep2","Clec4e-/-_sham_rep3","WT_IR_rep1","WT_IR_rep2","WT_IR_rep3","WT_IR_rep4","WT_IR_rep5","Clec4e-/-_IR_rep1","Clec4e-/-_IR_rep2","Clec4e-/-_IR_rep3","Clec4e-/-_IR_rep4","Clec4e-/-_IR_rep5")
dat6=dat[grepl("WT",colnames(dat))]

saveRDS(dat6,file = 'GSE77986.rds')

# bulkGSE77986数据整理（可以直接载入GSE77986.rds） ----------------------------------------------------------------

bulk77986=readRDS('GSE77986.rds')
bulk77986.sham=bulk77986[1:3]
bulk77986.mcao=bulk77986[4:8]

p2bulk.sham=as.numeric(bulk77986.sham['P2ry12',])
p2bulk.mcao=as.numeric(bulk77986.mcao['P2ry12',])

# sham
p2cor.sham <- cor(p2bulk.sham,t(bulk77986.sham))
p2cor.sham <- data.frame('corvalue'=t(p2cor.sham))
p2cor.sham$absvalue <- abs(p2cor.sham$corvalue)
p2cor.sham <- p2cor.sham[order(p2cor.sham$absvalue,decreasing = T),]

# mcao
p2cor.mcao <- cor(p2bulk.mcao,t(bulk77986.mcao))
p2cor.mcao <- data.frame('corvalue'=t(p2cor.mcao))
p2cor.mcao$absvalue <- abs(p2cor.mcao$corvalue)
p2cor.mcao <- p2cor.mcao[order(p2cor.mcao$absvalue,decreasing = T),]

# 取交集
p2cor.sham0.6 <- subset(p2cor.sham,absvalue>0.6)
p2cor.mcao0.6 <- subset(p2cor.mcao,absvalue>0.6)
p2cor.sham0.6.gene=rownames(p2cor.sham0.6)
p2cor.mcao0.6.gene=rownames(p2cor.mcao0.6)
intergene=intersect(p2cor.sham0.6.gene, p2cor.mcao0.6.gene)

# 按照相关系数排序
prunned_p2data=data.frame(names=intergene)
p2cor.sham0.6$names <- rownames(p2cor.sham0.6)
p2cor.mcao0.6$names <- rownames(p2cor.mcao0.6)
prunned_p2data=merge(prunned_p2data,p2cor.sham0.6,by='names')
prunned_p2data=merge(prunned_p2data,p2cor.mcao0.6,by='names',suffixes = c(".sham",".mcao"))
prunned_p2data$total=prunned_p2data$absvalue.sham+prunned_p2data$absvalue.mcao
prunned_p2data <- prunned_p2data[order(prunned_p2data$total,decreasing = T),]
prunned_p2data.gene <- prunned_p2data$names
